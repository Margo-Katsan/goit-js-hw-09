{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAoBF,SAASC,cAAc,uBAC3CE,EAAmBH,SAASC,cAAc,sBAC1CG,EAAgBJ,SAASC,cAAc,wBACzCI,GAAW,EACf,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIPT,EAAOiB,iBAAiB,UAAU,SAAAC,GAChCA,EAAMC,iBACN,IAAIC,EAAMC,SAASlB,EAAkBmB,OAErC,IAAIhB,EAGJ,IAAK,IAAIiB,EAAI,EAAGA,GAAKF,SAAShB,EAAciB,OAAQC,IAClDjB,GAAW,EACXC,EAAcgB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBX,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAE9DoB,OAAM,SAAAJ,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBX,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAE9DW,GAAOC,SAASjB,EAAiBkB,OACjCN,YAAW,WACTV,GAAW,C,GACVe,SAASlB,EAAkBmB,OAASD,SAASjB,EAAiBkB,QAAUD,SAAUhB,EAAciB,OAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst FormEl = document.querySelector('.form');\nconst inputFirstDelayEl = document.querySelector('input[name=\"delay\"]');\nconst inputStepDelayEl = document.querySelector('input[name=\"step\"]');\nconst inputAmountEl = document.querySelector('input[name=\"amount\"]');\nlet isActive = false;\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nFormEl.addEventListener('submit', event => {\n  event.preventDefault();\n  let del = parseInt(inputFirstDelayEl.value);\n  \n  if (isActive) {\n    return;\n  }\n  for (let i = 1; i <= parseInt(inputAmountEl.value); i++) {\n    isActive = true;\n    createPromise(i, del)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    del += parseInt(inputStepDelayEl.value);\n    setTimeout(() => {\n      isActive = false;\n    }, parseInt(inputFirstDelayEl.value) + parseInt(inputStepDelayEl.value) * ((parseInt(inputAmountEl.value)) - 1));\n  }\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$FormEl","document","querySelector","$ce04d3a99e08e73b$var$inputFirstDelayEl","$ce04d3a99e08e73b$var$inputStepDelayEl","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$isActive","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","del","parseInt","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.68134abf.js.map"}